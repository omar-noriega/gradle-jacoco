# Pipeline con Gradle, JaCoCo y SonarCloud
# Build your Java project and run tests with Gradle using a Gradle wrapper script.

trigger:
  - none

pool:
  vmImage: ubuntu-latest

steps:
  - task: SonarQubePrepare@4
    displayName: 'Preparacion sonar'
    inputs:
      SonarQube: 'SonarCloud'
      scannerMode: 'CLI'
      configMode: 'file'
      configFile: 'sonar.properties'

  - task: Gradle@3
    displayName: 'Build'
    inputs:
      workingDirectory: ''
      gradleWrapperFile: 'gradlew'
      tasks: 'clean test  build'
      sonarQubeRunAnalysis: true
      publishJUnitResults: true

  - task: PublishTestResults@2
    inputs:
      testResultsFiles: '**/test-results/test/TEST-*.xml'
      testRunTitle: 'Gradle Unit Tests'
  - task: PublishCodeCoverageResults@1
    inputs:
      codeCoverageTool: JaCoCo
      summaryFileLocation: 'build/jacoco/test.exec'

  - task: SonarQubeAnalyze@4
    displayName: 'Ejecucion Sonar'
    enabled: false

  - task: SonarQubePublish@4
    displayName: 'Sonar Quality gates'
    inputs:
      pollingTimeoutSec: '300'

  - task: CopyFiles@2
    inputs:
      sourceFolder: 'build/libs/'
      targetFolder: '$(Build.ArtifactStagingDirectory)'
  - task: PublishBuildArtifacts@1
    inputs:
      pathToPublish: '$(Build.ArtifactStagingDirectory)'
      artifactName: 'gradle-jacoco-example'